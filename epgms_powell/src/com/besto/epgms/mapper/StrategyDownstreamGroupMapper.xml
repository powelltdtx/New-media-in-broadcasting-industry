<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC 
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 每一个表的命名空间必须不一样 -->	
<mapper namespace="com.besto.epgms.mapper.StrategyDownstreamGroupMapper">   


	<!-- 平台分组详细信息查询 -->
	<select id="searchStrategyDownstreamGroupByStrategyId" resultType="com.besto.epgms.vo.StrategyDownstreamGroupVO" parameterType="com.besto.epgms.vo.StrategyVO"> 
		select 
   			a.id as strategy_id, 
   			a.name as strategy_name, 
   			c.groupid as group_id,
   			c.groupname as group_name,
   			c.downid as downStream_id,
   			c.downname as downStream_name 
   		from epgms_strategy a 
   			INNER JOIN epgms_strategy_group b ON a.id = b.strategy_id 
			INNER JOIN (select 
						a.id as groupid,
						a.name as groupname,
						b.name as downname ,
						b.id as downid 
						from epgms_group a LEFT JOIN epgms_downstream b ON a.downstream_id = b.id
						where a.status = '2' and a.type = '1' and b.status = '2'
						) c
		ON c.groupid = b.group_id  
		<where>
				a.status = '2'
			<if test="id!=null and id!='' ">
				and  a.id = '${id}' 
			</if>
		</where>
		ORDER BY strategy_id,downStream_id,group_id
	</select>
	
	<select id="searchDownstreamGroupByStrategyIds" resultType="com.besto.epgms.vo.StrategyDownstreamGroupVO" parameterType="com.besto.epgms.vo.StrategyVO"> 
		select  
				GROUP_CONCAT(DISTINCT CAST(b.id AS char)) as groupIds,
				GROUP_CONCAT(DISTINCT b.name ORDER BY b.id) as groupNames,
				c.id as downStream_id,
				c.name as downStream_name
		from epgms_strategy_group a
			LEFT JOIN epgms_group b ON a.group_id = b.id
			LEFT JOIN epgms_downstream c ON b.downstream_id = c.id
		<where>
			b.status = '2' 
			and b.type = '1' 
			and c.status = '2'
			and a.strategy_id in 
			<foreach collection="ids" item="id"  open="(" separator="," close=")">  
       			'${id}'
    		</foreach>
		</where>
		GROUP BY c.id
		ORDER BY c.id
	</select>

</mapper> 